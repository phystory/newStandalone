/*
  File:  bdecayV.h
  mod 15nov01 by pfm
  mod 18nov02 by pfm for exp 01006
  mod 2003/01/05 by ACM to start DSSD and SSSD strip numbering at 01 instead of 00
  mod 20apr04 by BET for 03005:  added i2n variables
  Actual construction of the variable tree structure
  which has to be done only once
  this file has to be edited in parallel with bdecayVariables_standalone.h
  which contains the structure declarations
  Mod 1Sep05 J.Pereira
*/

  
struct detectorcalibrator nerov = {
  /* Quadrant A */
  {
		*(new CTreeVariable("nerov.ecalib_quadA.0.offset", 0, "MeV")),
		*(new CTreeVariable("nerov.ecalib_quadA.0.gain", 1, "MeV/ch")),
		*(new CTreeVariable("nerov.ecalib_quadA.1.offset", 0, "MeV")),
		*(new CTreeVariable("nerov.ecalib_quadA.1.gain", 1, "MeV/ch")),
		*(new CTreeVariable("nerov.ecalib_quadA.2.offset", 0, "MeV")),
		*(new CTreeVariable("nerov.ecalib_quadA.2.gain", 1, "MeV/ch")),
		*(new CTreeVariable("nerov.ecalib_quadA.3.offset", 0, "MeV")),
		*(new CTreeVariable("nerov.ecalib_quadA.3.gain", 1, "MeV/ch")),
		*(new CTreeVariable("nerov.ecalib_quadA.4.offset", 0, "MeV")),
		*(new CTreeVariable("nerov.ecalib_quadA.4.gain", 1, "MeV/ch")),
		*(new CTreeVariable("nerov.ecalib_quadA.5.offset", 0, "MeV")),
		*(new CTreeVariable("nerov.ecalib_quadA.5.gain", 1, "MeV/ch")),
		*(new CTreeVariable("nerov.ecalib_quadA.6.offset", 0, "MeV")),
		*(new CTreeVariable("nerov.ecalib_quadA.6.gain", 1, "MeV/ch")),
		*(new CTreeVariable("nerov.ecalib_quadA.7.offset", 0, "MeV")),
		*(new CTreeVariable("nerov.ecalib_quadA.7.gain", 1, "MeV/ch")),
		*(new CTreeVariable("nerov.ecalib_quadA.8.offset", 0, "MeV")),
		*(new CTreeVariable("nerov.ecalib_quadA.8.gain", 1, "MeV/ch")),
		*(new CTreeVariable("nerov.ecalib_quadA.9.offset", 0, "MeV")),
		*(new CTreeVariable("nerov.ecalib_quadA.9.gain", 0, "MeV")),
		*(new CTreeVariable("nerov.ecalib_quadA.10.offset", 1, "MeV/ch")),
		*(new CTreeVariable("nerov.ecalib_quadA.10.gain", 0, "MeV")),
		*(new CTreeVariable("nerov.ecalib_quadA.11.offset", 1, "MeV/ch")),
		*(new CTreeVariable("nerov.ecalib_quadA.11.gain", 1, "MeV/ch")),
		*(new CTreeVariable("nerov.ecalib_quadA.12.offset", 0, "MeV")),
		*(new CTreeVariable("nerov.ecalib_quadA.12.gain", 1, "MeV/ch")),
		*(new CTreeVariable("nerov.ecalib_quadA.13.offset", 0, "MeV")),
		*(new CTreeVariable("nerov.ecalib_quadA.13.gain", 1, "MeV/ch")),
		*(new CTreeVariable("nerov.ecalib_quadA.14.offset", 0, "MeV")),
		*(new CTreeVariable("nerov.ecalib_quadA.14.gain", 1, "MeV/ch")),
		*(new CTreeVariable("nerov.ecalib_quadA.15.offset", 0, "MeV")),
		*(new CTreeVariable("nerov.ecalib_quadA.15.gain", 1, "MeV/ch"))
  },
  /* Quadrant B */
		    {                                  
		*(new CTreeVariable("nerov.ecalib_quadB.0.offset", 0, "MeV")),
		*(new CTreeVariable("nerov.ecalib_quadB.0.gain", 1, "MeV/ch")),
		*(new CTreeVariable("nerov.ecalib_quadB.1.offset", 0, "MeV")),
		*(new CTreeVariable("nerov.ecalib_quadB.1.gain", 1, "MeV/ch")),
		*(new CTreeVariable("nerov.ecalib_quadB.2.offset", 0, "MeV")),
		*(new CTreeVariable("nerov.ecalib_quadB.2.gain", 1, "MeV/ch")),
		*(new CTreeVariable("nerov.ecalib_quadB.3.offset", 0, "MeV")),
		*(new CTreeVariable("nerov.ecalib_quadB.3.gain", 1, "MeV/ch")),
		*(new CTreeVariable("nerov.ecalib_quadB.4.offset", 0, "MeV")),
		*(new CTreeVariable("nerov.ecalib_quadB.4.gain", 1, "MeV/ch")),
		*(new CTreeVariable("nerov.ecalib_quadB.5.offset", 0, "MeV")),
		*(new CTreeVariable("nerov.ecalib_quadB.5.gain", 1, "MeV/ch")),
		*(new CTreeVariable("nerov.ecalib_quadB.6.offset", 0, "MeV")),
		*(new CTreeVariable("nerov.ecalib_quadB.6.gain", 1, "MeV/ch")),
		*(new CTreeVariable("nerov.ecalib_quadB.7.offset", 0, "MeV")),
		*(new CTreeVariable("nerov.ecalib_quadB.7.gain", 1, "MeV/ch")),
		*(new CTreeVariable("nerov.ecalib_quadB.8.offset", 0, "MeV")),
		*(new CTreeVariable("nerov.ecalib_quadB.8.gain", 1, "MeV/ch")),
		*(new CTreeVariable("nerov.ecalib_quadB.9.offset", 0, "MeV")),
		*(new CTreeVariable("nerov.ecalib_quadB.9.gain", 1, "MeV/ch")),
		*(new CTreeVariable("nerov.ecalib_quadB.10.offset", 0, "MeV")),
		*(new CTreeVariable("nerov.ecalib_quadB.10.gain", 1, "MeV/ch")),
		*(new CTreeVariable("nerov.ecalib_quadB.11.offset", 0, "MeV")),
		*(new CTreeVariable("nerov.ecalib_quadB.11.gain", 1, "MeV/ch")),
		*(new CTreeVariable("nerov.ecalib_quadB.12.offset", 0, "MeV")),
		*(new CTreeVariable("nerov.ecalib_quadB.12.gain", 1, "MeV/ch")),
		*(new CTreeVariable("nerov.ecalib_quadB.13.offset", 0, "MeV")),
		*(new CTreeVariable("nerov.ecalib_quadB.13.gain", 1, "MeV/ch")),
		*(new CTreeVariable("nerov.ecalib_quadB.14.offset", 0, "MeV")),
		*(new CTreeVariable("nerov.ecalib_quadB.14.gain", 1, "MeV/ch")),
		*(new CTreeVariable("nerov.ecalib_quadB.15.offset", 0, "MeV")),
		*(new CTreeVariable("nerov.ecalib_quadB.15.gain", 1, "MeV/ch"))
  },
  /* Quadrant C */
  {	
                *(new CTreeVariable("nerov.ecalib_quadC.0.offset", 0, "MeV")),
		*(new CTreeVariable("nerov.ecalib_quadC.0.gain", 1, "MeV/ch")),
		*(new CTreeVariable("nerov.ecalib_quadC.1.offset", 0, "MeV")),
		*(new CTreeVariable("nerov.ecalib_quadC.1.gain", 1, "MeV/ch")),
		*(new CTreeVariable("nerov.ecalib_quadC.2.offset", 0, "MeV")),
		*(new CTreeVariable("nerov.ecalib_quadC.2.gain", 1, "MeV/ch")),
		*(new CTreeVariable("nerov.ecalib_quadC.3.offset", 0, "MeV")),
		*(new CTreeVariable("nerov.ecalib_quadC.3.gain", 1, "MeV/ch")),
		*(new CTreeVariable("nerov.ecalib_quadC.4.offset", 0, "MeV")),
		*(new CTreeVariable("nerov.ecalib_quadC.4.gain", 1, "MeV/ch")),
		*(new CTreeVariable("nerov.ecalib_quadC.5.offset", 0, "MeV")),
		*(new CTreeVariable("nerov.ecalib_quadC.5.gain", 1, "MeV/ch")),
		*(new CTreeVariable("nerov.ecalib_quadC.6.offset", 0, "MeV")),
		*(new CTreeVariable("nerov.ecalib_quadC.6.gain", 1, "MeV/ch")),
		*(new CTreeVariable("nerov.ecalib_quadC.7.offset", 0, "MeV")),
		*(new CTreeVariable("nerov.ecalib_quadC.7.gain", 0, "MeV")),
		*(new CTreeVariable("nerov.ecalib_quadC.8.offset", 1, "MeV/ch")),
		*(new CTreeVariable("nerov.ecalib_quadC.8.gain", 0, "MeV")),
		*(new CTreeVariable("nerov.ecalib_quadC.9.offset", 1, "MeV/ch")),
		*(new CTreeVariable("nerov.ecalib_quadC.9.gain", 1, "MeV/ch")),
		*(new CTreeVariable("nerov.ecalib_quadC.10.offset", 0, "MeV")),
		*(new CTreeVariable("nerov.ecalib_quadC.10.gain", 1, "MeV/ch")),
		*(new CTreeVariable("nerov.ecalib_quadC.11.offset", 0, "MeV")),
		*(new CTreeVariable("nerov.ecalib_quadC.11.gain", 1, "MeV/ch")),
		*(new CTreeVariable("nerov.ecalib_quadC.12.offset", 0, "MeV")),
		*(new CTreeVariable("nerov.ecalib_quadC.12.gain", 1, "MeV/ch")),
		*(new CTreeVariable("nerov.ecalib_quadC.13.offset", 0, "MeV")),
		*(new CTreeVariable("nerov.ecalib_quadC.13.gain", 1, "MeV/ch")),
		*(new CTreeVariable("nerov.ecalib_quadC.14.offset", 0, "MeV")),
		*(new CTreeVariable("nerov.ecalib_quadC.14.gain", 1, "MeV/ch")),
		*(new CTreeVariable("nerov.ecalib_quadC.15.offset", 0, "MeV")),
		*(new CTreeVariable("nerov.ecalib_quadC.15.gain", 1, "MeV/ch"))
  },

  /*Quadrant D*/
  {
		*(new CTreeVariable("nerov.ecalib_quadD.0.offset", 0, "MeV")),
		*(new CTreeVariable("nerov.ecalib_quadD.0.gain", 1, "MeV/ch")),
		*(new CTreeVariable("nerov.ecalib_quadD.1.offset", 0, "MeV")),
		*(new CTreeVariable("nerov.ecalib_quadD.1.gain", 1, "MeV/ch")),
		*(new CTreeVariable("nerov.ecalib_quadD.2.offset", 0, "MeV")),
		*(new CTreeVariable("nerov.ecalib_quadD.2.gain", 1, "MeV/ch")),
		*(new CTreeVariable("nerov.ecalib_quadD.3.offset", 0, "MeV")),
		*(new CTreeVariable("nerov.ecalib_quadD.3.gain", 1, "MeV/ch")),
		*(new CTreeVariable("nerov.ecalib_quadD.4.offset", 0, "MeV")),
		*(new CTreeVariable("nerov.ecalib_quadD.4.gain", 1, "MeV/ch")),
		*(new CTreeVariable("nerov.ecalib_quadD.5.offset", 0, "MeV")),
		*(new CTreeVariable("nerov.ecalib_quadD.5.gain", 1, "MeV/ch")),
		*(new CTreeVariable("nerov.ecalib_quadD.6.offset", 0, "MeV")),
		*(new CTreeVariable("nerov.ecalib_quadD.6.gain", 1, "MeV/ch")),
		*(new CTreeVariable("nerov.ecalib_quadD.7.offset", 0, "MeV")),
		*(new CTreeVariable("nerov.ecalib_quadD.7.gain", 1, "MeV/ch")),
		*(new CTreeVariable("nerov.ecalib_quadD.8.offset", 0, "MeV")),
		*(new CTreeVariable("nerov.ecalib_quadD.8.gain", 1, "MeV/ch")),
		*(new CTreeVariable("nerov.ecalib_quadD.9.offset", 0, "MeV")),
		*(new CTreeVariable("nerov.ecalib_quadD.9.gain", 1, "MeV/ch")),
		*(new CTreeVariable("nerov.ecalib_quadD.10.offset", 0, "MeV")),
		*(new CTreeVariable("nerov.ecalib_quadD.10.gain", 1, "MeV/ch")),
		*(new CTreeVariable("nerov.ecalib_quadD.11.offset", 0, "MeV")),
		*(new CTreeVariable("nerov.ecalib_quadD.11.gain", 1, "MeV/ch")),
		*(new CTreeVariable("nerov.ecalib_quadD.12.offset", 0, "MeV")),
		*(new CTreeVariable("nerov.ecalib_quadD.12.gain", 1, "MeV/ch")),
		*(new CTreeVariable("nerov.ecalib_quadD.13.offset", 0, "MeV")),
		*(new CTreeVariable("nerov.ecalib_quadD.13.gain", 1, "MeV/ch")),
		*(new CTreeVariable("nerov.ecalib_quadD.14.offset", 0, "MeV")),
		*(new CTreeVariable("nerov.ecalib_quadD.14.gain", 1, "MeV/ch")),
		*(new CTreeVariable("nerov.ecalib_quadD.15.offset", 0, "MeV")),
		*(new CTreeVariable("nerov.ecalib_quadD.15.gain", 1, "MeV/ch"))
  },
/* Quadrant A time */
  {
                *(new CTreeVariable("nerov.tcalib_quadA.0.offset", 0, "ns")),
                *(new CTreeVariable("nerov.tcalib_quadA.0.gain", 1, "ns/ch")),
		*(new CTreeVariable("nerov.tcalib_quadA.1.offset", 0, "ns")),
		*(new CTreeVariable("nerov.tcalib_quadA.1.gain", 1, "ns/ch")),
		*(new CTreeVariable("nerov.tcalib_quadA.2.offset", 0, "ns")),
		*(new CTreeVariable("nerov.tcalib_quadA.2.gain", 1, "ns/ch")),
		*(new CTreeVariable("nerov.tcalib_quadA.3.offset", 0, "ns")),
		*(new CTreeVariable("nerov.tcalib_quadA.3.gain", 1, "ns/ch")),
		*(new CTreeVariable("nerov.tcalib_quadA.4.offset", 0, "ns")),
		*(new CTreeVariable("nerov.tcalib_quadA.4.gain", 1, "ns/ch")),
		*(new CTreeVariable("nerov.tcalib_quadA.5.offset", 0, "ns")),
		*(new CTreeVariable("nerov.tcalib_quadA.5.gain", 1, "ns/ch")),
		*(new CTreeVariable("nerov.tcalib_quadA.6.offset", 0, "ns")),
		*(new CTreeVariable("nerov.tcalib_quadA.6.gain", 1, "ns/ch")),
		*(new CTreeVariable("nerov.tcalib_quadA.7.offset", 0, "ns")),
		*(new CTreeVariable("nerov.tcalib_quadA.7.gain", 1, "ns/ch")),
		*(new CTreeVariable("nerov.tcalib_quadA.8.offset", 0, "ns")),
		*(new CTreeVariable("nerov.tcalib_quadA.8.gain", 1, "ns/ch")),
		*(new CTreeVariable("nerov.tcalib_quadA.9.offset", 0, "ns")),
		*(new CTreeVariable("nerov.tcalib_quadA.9.gain", 0, "ns")),
		*(new CTreeVariable("nerov.tcalib_quadA.10.offset", 1, "ns/ch")),
		*(new CTreeVariable("nerov.tcalib_quadA.10.gain", 0, "ns")),
		*(new CTreeVariable("nerov.tcalib_quadA.11.offset", 1, "ns/ch")),
		*(new CTreeVariable("nerov.tcalib_quadA.11.gain", 1, "ns/ch")),
		*(new CTreeVariable("nerov.tcalib_quadA.12.offset", 0, "ns")),
		*(new CTreeVariable("nerov.tcalib_quadA.12.gain", 1, "ns/ch")),
		*(new CTreeVariable("nerov.tcalib_quadA.13.offset", 0, "ns")),
		*(new CTreeVariable("nerov.tcalib_quadA.13.gain", 1, "ns/ch")),
		*(new CTreeVariable("nerov.tcalib_quadA.14.offset", 0, "ns")),
		*(new CTreeVariable("nerov.tcalib_quadA.14.gain", 1, "ns/ch")),
		*(new CTreeVariable("nerov.tcalib_quadA.15.offset", 0, "ns")),
		*(new CTreeVariable("nerov.tcalib_quadA.15.gain", 1, "ns/ch"))
  },
  /* Quadrant B time */
  {
                *(new CTreeVariable("nerov.tcalib_quadB.0.offset", 0, "ns")),
		*(new CTreeVariable("nerov.tcalib_quadB.0.gain", 1, "ns/ch")),
		*(new CTreeVariable("nerov.tcalib_quadB.1.offset", 0, "ns")),
		*(new CTreeVariable("nerov.tcalib_quadB.1.gain", 1, "ns/ch")),
		*(new CTreeVariable("nerov.tcalib_quadB.2.offset", 0, "ns")),
		*(new CTreeVariable("nerov.tcalib_quadB.2.gain", 1, "ns/ch")),
		*(new CTreeVariable("nerov.tcalib_quadB.3.offset", 0, "ns")),
		*(new CTreeVariable("nerov.tcalib_quadB.3.gain", 1, "ns/ch")),
		*(new CTreeVariable("nerov.tcalib_quadB.4.offset", 0, "ns")),
		*(new CTreeVariable("nerov.tcalib_quadB.4.gain", 1, "ns/ch")),
		*(new CTreeVariable("nerov.tcalib_quadB.5.offset", 0, "ns")),
		*(new CTreeVariable("nerov.tcalib_quadB.5.gain", 1, "ns/ch")),
		*(new CTreeVariable("nerov.tcalib_quadB.6.offset", 0, "ns")),
		*(new CTreeVariable("nerov.tcalib_quadB.6.gain", 1, "ns/ch")),
		*(new CTreeVariable("nerov.tcalib_quadB.7.offset", 0, "ns")),
		*(new CTreeVariable("nerov.tcalib_quadB.7.gain", 1, "ns/ch")),
		*(new CTreeVariable("nerov.tcalib_quadB.8.offset", 0, "ns")),
		*(new CTreeVariable("nerov.tcalib_quadB.8.gain", 1, "ns/ch")),
		*(new CTreeVariable("nerov.tcalib_quadB.9.offset", 0, "ns")),
		*(new CTreeVariable("nerov.tcalib_quadB.9.gain", 1, "ns/ch")),
		*(new CTreeVariable("nerov.tcalib_quadB.10.offset", 0, "ns")),
		*(new CTreeVariable("nerov.tcalib_quadB.10.gain", 1, "ns/ch")),
		*(new CTreeVariable("nerov.tcalib_quadB.11.offset", 0, "ns")),
		*(new CTreeVariable("nerov.tcalib_quadB.11.gain", 1, "ns/ch")),
		*(new CTreeVariable("nerov.tcalib_quadB.12.offset", 0, "ns")),
		*(new CTreeVariable("nerov.tcalib_quadB.12.gain", 1, "ns/ch")),
		*(new CTreeVariable("nerov.tcalib_quadB.13.offset", 0, "ns")),
		*(new CTreeVariable("nerov.tcalib_quadB.13.gain", 1, "ns/ch")),
		*(new CTreeVariable("nerov.tcalib_quadB.14.offset", 0, "ns")),
		*(new CTreeVariable("nerov.tcalib_quadB.14.gain", 1, "ns/ch")),
		*(new CTreeVariable("nerov.tcalib_quadB.15.offset", 0, "ns")),
		*(new CTreeVariable("nerov.tcalib_quadB.15.gain", 1, "ns/ch"))
  },
  /* Quadrant C time */
  {
                *(new CTreeVariable("nerov.tcalib_quadC.0.offset", 0, "ns")),
		*(new CTreeVariable("nerov.tcalib_quadC.0.gain", 1, "ns/ch")),
		*(new CTreeVariable("nerov.tcalib_quadC.1.offset", 0, "ns")),
		*(new CTreeVariable("nerov.tcalib_quadC.1.gain", 1, "ns/ch")),
		*(new CTreeVariable("nerov.tcalib_quadC.2.offset", 0, "ns")),
		*(new CTreeVariable("nerov.tcalib_quadC.2.gain", 1, "ns/ch")),
		*(new CTreeVariable("nerov.tcalib_quadC.3.offset", 0, "ns")),
		*(new CTreeVariable("nerov.tcalib_quadC.3.gain", 1, "ns/ch")),
		*(new CTreeVariable("nerov.tcalib_quadC.4.offset", 0, "ns")),
		*(new CTreeVariable("nerov.tcalib_quadC.4.gain", 1, "ns/ch")),
		*(new CTreeVariable("nerov.tcalib_quadC.5.offset", 0, "ns")),
		*(new CTreeVariable("nerov.tcalib_quadC.5.gain", 1, "ns/ch")),
		*(new CTreeVariable("nerov.tcalib_quadC.6.offset", 0, "ns")),
		*(new CTreeVariable("nerov.tcalib_quadC.6.gain", 1, "ns/ch")),
		*(new CTreeVariable("nerov.tcalib_quadC.7.offset", 0, "ns")),
		*(new CTreeVariable("nerov.tcalib_quadC.7.gain", 0, "ns")),
		*(new CTreeVariable("nerov.tcalib_quadC.8.offset", 1, "ns/ch")),
		*(new CTreeVariable("nerov.tcalib_quadC.8.gain", 0, "ns")),
		*(new CTreeVariable("nerov.tcalib_quadC.9.offset", 1, "ns/ch")),
		*(new CTreeVariable("nerov.tcalib_quadC.9.gain", 1, "ns/ch")),
		*(new CTreeVariable("nerov.tcalib_quadC.10.offset", 0, "ns")),
		*(new CTreeVariable("nerov.tcalib_quadC.10.gain", 1, "ns/ch")),
		*(new CTreeVariable("nerov.tcalib_quadC.11.offset", 0, "ns")),
		*(new CTreeVariable("nerov.tcalib_quadC.11.gain", 1, "ns/ch")),
		*(new CTreeVariable("nerov.tcalib_quadC.12.offset", 0, "ns")),
		*(new CTreeVariable("nerov.tcalib_quadC.12.gain", 1, "ns/ch")),
		*(new CTreeVariable("nerov.tcalib_quadC.13.offset", 0, "ns")),
		*(new CTreeVariable("nerov.tcalib_quadC.13.gain", 1, "ns/ch")),
		*(new CTreeVariable("nerov.tcalib_quadC.14.offset", 0, "ns")),
		*(new CTreeVariable("nerov.tcalib_quadC.14.gain", 1, "ns/ch")),
		*(new CTreeVariable("nerov.tcalib_quadC.15.offset", 0, "ns")),
		*(new CTreeVariable("nerov.tcalib_quadC.15.gain", 1, "ns/ch"))
  },
  /* Quadrant D time */
  {
		*(new CTreeVariable("nerov.tcalib_quadD.0.offset", 0, "ns")),
		*(new CTreeVariable("nerov.tcalib_quadD.0.gain", 1, "ns/ch")),
		*(new CTreeVariable("nerov.tcalib_quadD.1.offset", 0, "ns")),
		*(new CTreeVariable("nerov.tcalib_quadD.1.gain", 1, "ns/ch")),
		*(new CTreeVariable("nerov.tcalib_quadD.2.offset", 0, "ns")),
		*(new CTreeVariable("nerov.tcalib_quadD.2.gain", 1, "ns/ch")),
		*(new CTreeVariable("nerov.tcalib_quadD.3.offset", 0, "ns")),
		*(new CTreeVariable("nerov.tcalib_quadD.3.gain", 1, "ns/ch")),
		*(new CTreeVariable("nerov.tcalib_quadD.4.offset", 0, "ns")),
		*(new CTreeVariable("nerov.tcalib_quadD.4.gain", 1, "ns/ch")),
		*(new CTreeVariable("nerov.tcalib_quadD.5.offset", 0, "ns")),
		*(new CTreeVariable("nerov.tcalib_quadD.5.gain", 1, "ns/ch")),
		*(new CTreeVariable("nerov.tcalib_quadD.6.offset", 0, "ns")),
		*(new CTreeVariable("nerov.tcalib_quadD.6.gain", 1, "ns/ch")),
		*(new CTreeVariable("nerov.tcalib_quadD.7.offset", 0, "ns")),
		*(new CTreeVariable("nerov.tcalib_quadD.7.gain", 1, "ns/ch")),
		*(new CTreeVariable("nerov.tcalib_quadD.8.offset", 0, "ns")),
		*(new CTreeVariable("nerov.tcalib_quadD.8.gain", 1, "ns/ch")),
		*(new CTreeVariable("nerov.tcalib_quadD.9.offset", 0, "ns")),
		*(new CTreeVariable("nerov.tcalib_quadD.9.gain", 1, "ns/ch")),
		*(new CTreeVariable("nerov.tcalib_quadD.10.offset", 0, "ns")),
		*(new CTreeVariable("nerov.tcalib_quadD.10.gain", 1, "ns/ch")),
		*(new CTreeVariable("nerov.tcalib_quadD.11.offset", 0, "ns")),
		*(new CTreeVariable("nerov.tcalib_quadD.11.gain", 1, "ns/ch")),
		*(new CTreeVariable("nerov.tcalib_quadD.12.offset", 0, "ns")),
		*(new CTreeVariable("nerov.tcalib_quadD.12.gain", 1, "ns/ch")),
		*(new CTreeVariable("nerov.tcalib_quadD.13.offset", 0, "ns")),
		*(new CTreeVariable("nerov.tcalib_quadD.13.gain", 1, "ns/ch")),
		*(new CTreeVariable("nerov.tcalib_quadD.14.offset", 0, "ns")),
		*(new CTreeVariable("nerov.tcalib_quadD.14.gain", 1, "ns/ch")),
		*(new CTreeVariable("nerov.tcalib_quadD.15.offset", 0, "ns")),
		*(new CTreeVariable("nerov.tcalib_quadD.15.gain", 1, "ns/ch"))
  }
};
